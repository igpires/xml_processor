version: '3.8'
services:
  xml_processor_service:
    container_name: processor_service
    build: .
    ports:
      - '3000:3000'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      PORT: 3000
      DB_HOST: db
      RAILS_ENV: development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      REDIS_URL: redis://redis:6379/1
      SECRET_KEY_BASE: b30e3c32de7a487ab2c5e42ec8f1b8511e3ea489fa75bd3d89fea664bc6ef7d2942933b1edde7fec1d9b7db5a54ee5887b19affbbf57b39a018ab321a196d1eb
    networks:
      - app_network

  db:
    image: postgres:14
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - app_network

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  sidekiq:
    container_name: sidekiq
    build: .
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    environment:
      RAILS_ENV: development
      REDIS_URL: redis://redis:6379/1
    networks:
      - app_network
    entrypoint: ["./sidekiq_starter.sh"]
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '4'

volumes:
  postgres_data:
  redis_data:

networks:
  app_network:
    driver: bridge
